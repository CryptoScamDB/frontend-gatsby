{"version":3,"sources":["webpack:///./src/pages/scams.tsx","webpack:///./src/components/html/Headings.tsx"],"names":["Container","styled","div","withConfig","displayName","componentId","StatsContainer","ul","Stat","li","ScamStatus","p","span","props","indexOf","status","toLowerCase","Scams","_ref","data","arrTableData","n","allCsdbScamDomains","edges","forEach","scam","objRecord","URL","category","subcategory","node","name","join","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","csdbId","role","push","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","imageBg","id","_components_SEO__WEBPACK_IMPORTED_MODULE_5__","title","keywords","_components_html_Headings__WEBPACK_IMPORTED_MODULE_8__","text","_components_pagination_PaginatedTable__WEBPACK_IMPORTED_MODULE_6__","totalRecords","length","recordsPerPage","tableData","tableHeaders","allCsdbStats","scams","toLocaleString","actives","addresses","inactives","pageQuery","__webpack_require__","d","__webpack_exports__","Heading1","Heading2","Heading3","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","styled_components__WEBPACK_IMPORTED_MODULE_1__","HeadingTag1","h1","HeadingTag2","h2","HeadingTag3","h3","h4","h5","h6"],"mappings":"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","file":"component---src-pages-scams-tsx-6e256c9af53a91fbc3ee.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PaginatedTable from '../components/pagination/PaginatedTable';\nimport styled from 'styled-components';\nimport { Heading1 } from '../components/html/Headings';\n\nconst Container = styled.div`\n  margin: 0 5%;\n  width: 90%;\n\n  @media (max-width: 968px) {\n    width: 100%;\n    margin: 0;\n  }\n`;\nconst StatsContainer = styled.ul`\n  list-style-type: none;\n  display: block;\n  padding-top: 5%;\n  margin-left: 10%;\n\n  @media (max-width: 968px) {\n    margin: 3em 35%;\n  }\n`;\nconst Stat = styled.li`\n  text-align: center;\n  margin: 2em;\n  text-transform: uppercase;\n  background: radial-gradient(ellipse at center, #329efc 1%, #288accd4 53%, #0e1f357a 84%);\n  height: 12vw;\n  width: 12vw;\n  border-radius: 100%;\n  display: inline-flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  vertical-align: middle;\n  opacity: 0.9;\n  padding: 1vw;\n  box-sizing: border-box;\n\n  @media (max-width: 968px) {\n    width: 120px;\n    height: 120px;\n  }\n\n  &:after {\n    width: 170%;\n    height: 170%;\n    position: absolute;\n    background: #2b92d836;\n    content: '';\n    border-radius: 100%;\n    left: -35%;\n    top: -35%;\n    z-index: -1;\n  }\n\n  &:before {\n    width: 230%;\n    height: 230%;\n    position: absolute;\n    background: #1d6ba04d;\n    content: '';\n    border-radius: 100%;\n    left: -65%;\n    top: -65%;\n    z-index: -2;\n  }\n\n  &:nth-child(1) {\n    margin-top: 3vw;\n  }\n\n  &:nth-child(2) {\n    width: 11vw;\n    height: 11vw;\n    margin-top: 9vw;\n    margin-left: 8vw;\n\n    @media (max-width: 968px) {\n      width: 120px;\n      height: 120px;\n      margin-left: 0vw;\n      margin-top: 20vw;\n    }\n  }\n\n  &:nth-child(3) {\n    margin-left: 8vw;\n\n    @media (max-width: 968px) {\n      margin-left: 0vw;\n    }\n  }\n\n  &nth-child(4) {\n    margin-top: 13vw;\n    margin-left: 8vw;\n\n    @media (max-width: 968px) {\n      width: 120px;\n      height: 120px;\n      margin-left: 0vw;\n    }\n  }\n\n  @media (max-width: 968px) {\n    display: block;\n    margin: 0em 0em;\n    margin-top: 20vw;\n\n    &nth-child(1) {\n      margin: auto auto;\n    }\n    &nth-child(2) {\n      margin: auto auto;\n    }\n    &nth-child(3) {\n      margin: auto auto;\n    }\n    &nth-child(4) {\n      margin: auto auto;\n    }\n  }\n`;\nconst StatText = styled.p`\n  text-align: center;\n`;\n\ninterface ScamStatusProps {\n  status: string;\n}\n\nconst ScamStatus = styled.span`\n  color: ${(props: ScamStatusProps) =>\n    ['active'].indexOf(props.status.toLowerCase()) ? '#5194A2' : '#FF303E'};\n`;\n\ninterface ScamsProps {\n  data: any;\n}\n\nconst Scams: React.StatelessComponent<ScamsProps> = ({ data }: ScamsProps) => {\n  // Sort out the table data\n  const arrTableData: any[] = [];\n  let n = 1;\n  data.allCsdbScamDomains.edges.forEach((scam: any) => {\n    const objRecord: any = {\n      n: '',\n      URL: '',\n      status: '',\n      category: '',\n      subcategory: ''\n    };\n\n    scam = scam.node;\n\n    if ([scam.name, scam.category, scam.subcategory].indexOf(null) === -1) {\n      objRecord.n = ['#', n++].join('');\n\n      objRecord.URL = (\n        <Link to={'/domain/' + scam.csdbId} role=\"link\">\n          {scam.name.toLowerCase()}\n        </Link>\n      );\n\n      objRecord.status = scam.status;\n      if (scam.status == null) {\n        objRecord.status = 'Unknown';\n      }\n      switch (objRecord.status.toLowerCase()) {\n        case 'active':\n          objRecord.status = <ScamStatus status=\"active\">Active</ScamStatus>;\n          break;\n        default:\n        case 'offline':\n        case 'suspended':\n          objRecord.status = (\n            <ScamStatus status=\"inactive\">\n              {objRecord.status === '' ? 'Unknown' : objRecord.status}\n            </ScamStatus>\n          );\n          break;\n      }\n\n      objRecord.category = scam.category;\n      objRecord.subcategory = scam.subcategory;\n\n      arrTableData.push(objRecord);\n    }\n  });\n\n  return (\n    <Layout imageBg={false} id=\"scams-view\">\n      <SEO title=\"Scams\" keywords={[`ethereum`, `scams`, `mycrypto`]} />\n\n      <Container>\n        <Heading1 text=\"See Scams\" />\n\n        <PaginatedTable\n          totalRecords={data.allCsdbScamDomains.edges.length}\n          recordsPerPage={25}\n          tableData={arrTableData}\n          tableHeaders={['#', 'URL', 'Status', 'Category', 'Subcategory']}\n        />\n      </Container>\n\n      <StatsContainer>\n        <Stat>\n          <p>\n            {data.allCsdbStats.edges[0].node.scams.toLocaleString()} <br /> TOTAL SCAMS\n          </p>\n        </Stat>\n        <Stat>\n          <p>\n            {data.allCsdbStats.edges[0].node.actives.toLocaleString()} <br /> ACTIVE SCAMS\n          </p>\n        </Stat>\n        <Stat>\n          <p>\n            {data.allCsdbStats.edges[0].node.addresses.toLocaleString()} <br /> ADDRESSES REGISTERED\n          </p>\n        </Stat>\n        <Stat>\n          <p>\n            {data.allCsdbStats.edges[0].node.inactives.toLocaleString()} <br /> INACTIVE SCAMS\n          </p>\n        </Stat>\n      </StatsContainer>\n    </Layout>\n  );\n};\n\nexport default Scams;\n\nexport const pageQuery = graphql`\n  query GetPaginatedScams {\n    allCsdbScamDomains {\n      totalCount\n      edges {\n        node {\n          id\n          csdbId\n          name\n          status\n          category\n          subcategory\n        }\n      }\n    }\n    allCsdbStats {\n      totalCount\n      edges {\n        node {\n          scams\n          verified\n          featured\n          addresses\n          actives\n          inactives\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeadingTag1 = styled.h1`\n  color: #ebc561;\n  text-transform: uppercase;\n  margin: auto auto;\n  font-family: 'Unna', serif;\n`;\nconst HeadingTag2 = styled.h2`\n  color: #ffffff;\n  text-transform: uppercase;\n  margin: auto auto;\n`;\nconst HeadingTag3 = styled.h3`\n  color: #ffffff;\n  text-transform: uppercase;\n  margin: auto auto;\n`;\nconst HeadingTag4 = styled.h4`\n  color: #ffffff;\n  text-transform: uppercase;\n  margin: auto auto;\n`;\nconst HeadingTag5 = styled.h5`\n  color: #ffffff;\n  text-transform: uppercase;\n  margin: auto auto;\n`;\nconst HeadingTag6 = styled.h6`\n  color: #ffffff;\n  text-transform: uppercase;\n  margin: auto auto;\n`;\n\ninterface Props {\n  text: string;\n}\n\nconst Heading1: React.SFC<Props> = props => <HeadingTag1>{props.text}</HeadingTag1>;\n\nconst Heading2: React.SFC<Props> = props => <HeadingTag2>{props.text}</HeadingTag2>;\n\nconst Heading3: React.SFC<Props> = props => <HeadingTag3>{props.text}</HeadingTag3>;\n\nconst Heading4: React.SFC<Props> = props => <HeadingTag4>{props.text}</HeadingTag4>;\n\nconst Heading5: React.SFC<Props> = props => <HeadingTag5>{props.text}</HeadingTag5>;\n\nconst Heading6: React.SFC<Props> = props => <HeadingTag6>{props.text}</HeadingTag6>;\nexport { Heading1, Heading2, Heading3, Heading4, Heading5, Heading6 };\n"],"sourceRoot":""}